## -*- encoding: utf-8 -*-


# This file was *autogenerated* from the file Template.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_5 = Integer(5); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_30 = Integer(30); _sage_const_0p5 = RealNumber('0.5'); _sage_const_0p008 = RealNumber('0.008'); _sage_const_0p1 = RealNumber('0.1'); _sage_const_0p25 = RealNumber('0.25'); _sage_const_25 = Integer(25); _sage_const_1p5 = RealNumber('1.5'); _sage_const_0p8 = RealNumber('0.8'); _sage_const_1p0 = RealNumber('1.0'); _sage_const_1p1 = RealNumber('1.1'); _sage_const_1p2 = RealNumber('1.2'); _sage_const_1p4 = RealNumber('1.4'); _sage_const_43 = Integer(43); _sage_const_45 = Integer(45); _sage_const_1 = Integer(1); _sage_const_49 = Integer(49); _sage_const_54 = Integer(54); _sage_const_56 = Integer(56); _sage_const_58 = Integer(58); _sage_const_60 = Integer(60); _sage_const_62 = Integer(62); _sage_const_4 = Integer(4); _sage_const_64 = Integer(64); _sage_const_6 = Integer(6); _sage_const_7 = Integer(7); _sage_const_70 = Integer(70); _sage_const_78 = Integer(78); _sage_const_80 = Integer(80); _sage_const_95 = Integer(95); _sage_const_100 = Integer(100); _sage_const_103 = Integer(103); _sage_const_8 = Integer(8); _sage_const_9 = Integer(9); _sage_const_105 = Integer(105); _sage_const_10 = Integer(10); _sage_const_11 = Integer(11); _sage_const_107 = Integer(107); _sage_const_12 = Integer(12); _sage_const_13 = Integer(13); _sage_const_125 = Integer(125); _sage_const_143 = Integer(143); _sage_const_145 = Integer(145); _sage_const_14 = Integer(14); _sage_const_17 = Integer(17); _sage_const_21 = Integer(21); _sage_const_15 = Integer(15); _sage_const_26 = Integer(26); _sage_const_16 = Integer(16); _sage_const_51 = Integer(51); _sage_const_61 = Integer(61); _sage_const_63 = Integer(63); _sage_const_18 = Integer(18); _sage_const_66 = Integer(66); _sage_const_75 = Integer(75); _sage_const_19 = Integer(19); _sage_const_82 = Integer(82); _sage_const_20 = Integer(20); _sage_const_22 = Integer(22); _sage_const_33 = Integer(33); _sage_const_40 = Integer(40); _sage_const_44 = Integer(44); _sage_const_23 = Integer(23); _sage_const_24 = Integer(24); _sage_const_48 = Integer(48); _sage_const_36 = Integer(36); _sage_const_27 = Integer(27); _sage_const_50 = Integer(50); _sage_const_52 = Integer(52); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_85 = Integer(85); _sage_const_91 = Integer(91); _sage_const_93 = Integer(93); _sage_const_31 = Integer(31); _sage_const_32 = Integer(32); _sage_const_97 = Integer(97); _sage_const_99 = Integer(99); _sage_const_34 = Integer(34); _sage_const_35 = Integer(35); _sage_const_101 = Integer(101); _sage_const_2p9 = RealNumber('2.9'); _sage_const_3p1 = RealNumber('3.1'); _sage_const_108 = Integer(108); _sage_const_110 = Integer(110); _sage_const_59 = Integer(59); _sage_const_525 = Integer(525); _sage_const_256 = Integer(256); _sage_const_37 = Integer(37); _sage_const_38 = Integer(38); _sage_const_39 = Integer(39); _sage_const_68 = Integer(68); _sage_const_41 = Integer(41); _sage_const_71 = Integer(71); _sage_const_42 = Integer(42); _sage_const_73 = Integer(73); _sage_const_79 = Integer(79); _sage_const_46 = Integer(46); _sage_const_47 = Integer(47); _sage_const_84 = Integer(84); _sage_const_86 = Integer(86); _sage_const_88 = Integer(88); _sage_const_90 = Integer(90); _sage_const_55 = Integer(55); _sage_const_57 = Integer(57); _sage_const_53 = Integer(53); _sage_const_65 = Integer(65); _sage_const_67 = Integer(67); _sage_const_69 = Integer(69); _sage_const_76 = Integer(76); _sage_const_81 = Integer(81); _sage_const_72 = Integer(72); _sage_const_74 = Integer(74); _sage_const_77 = Integer(77); _sage_const_115 = Integer(115); _sage_const_83 = Integer(83); _sage_const_123 = Integer(123); _sage_const_131 = Integer(131); _sage_const_134 = Integer(134); _sage_const_87 = Integer(87); _sage_const_141 = Integer(141); _sage_const_0p3 = RealNumber('0.3'); _sage_const_89 = Integer(89); _sage_const_92 = Integer(92); _sage_const_94 = Integer(94); _sage_const_98 = Integer(98); _sage_const_96 = Integer(96); _sage_const_113 = Integer(113); _sage_const_114 = Integer(114); _sage_const_116 = Integer(116); _sage_const_117 = Integer(117); _sage_const_120 = Integer(120); _sage_const_128 = Integer(128); _sage_const_102 = Integer(102); _sage_const_104 = Integer(104); _sage_const_0p0000001 = RealNumber('0.0000001'); _sage_const_2p0 = RealNumber('2.0'); _sage_const_2p8 = RealNumber('2.8'); _sage_const_106 = Integer(106); _sage_const_109 = Integer(109); _sage_const_111 = Integer(111); _sage_const_112 = Integer(112); _sage_const_0p00 = RealNumber('0.00'); _sage_const_118 = Integer(118); _sage_const_119 = Integer(119); _sage_const_121 = Integer(121); _sage_const_122 = Integer(122); _sage_const_124 = Integer(124); _sage_const_126 = Integer(126); _sage_const_127 = Integer(127); _sage_const_129 = Integer(129); _sage_const_130 = Integer(130); _sage_const_133 = Integer(133); _sage_const_147 = Integer(147); _sage_const_132 = Integer(132); _sage_const_159 = Integer(159); _sage_const_166 = Integer(166); _sage_const_135 = Integer(135); _sage_const_136 = Integer(136); _sage_const_168 = Integer(168); _sage_const_137 = Integer(137); _sage_const_183 = Integer(183); _sage_const_138 = Integer(138); _sage_const_139 = Integer(139); _sage_const_140 = Integer(140); _sage_const_186 = Integer(186)## This file (Template.sagetex.sage) was *autogenerated* from Template.tex with sagetex.sty version 2020/08/12 v3.5.
import sagetex
_st_ = sagetex.SageTeXProcessor('Template', version='2020/08/12 v3.5', version_check=True)
try:
 _st_.current_tex_line = _sage_const_5 
 _st_.plot(_sage_const_0 , format='notprovided', _p_=plot(sin(_sage_const_2 *x**_sage_const_3 )**_sage_const_2 /x**_sage_const_3  + x, -_sage_const_2 , _sage_const_2 ))
except:
 _st_.goboom(_sage_const_5 )
_st_.current_tex_line = _sage_const_30 
_st_.blockbegin()
try:
 intervals_of_constancy = plot(_sage_const_0 , xmin=-_sage_const_0p5 , xmax=_sage_const_0p5 , ymin = _sage_const_0 , ymax = _sage_const_0 , axes = False)
 intervals_of_constancy += circle((_sage_const_0 , _sage_const_0 ), _sage_const_0p008 , rgbcolor="black")
 y_margin = _sage_const_0p1 
 intervals_of_constancy  += text("-", (-_sage_const_0p25  , y_margin), color="black", fontsize=_sage_const_25 )
 intervals_of_constancy  += text("+", (_sage_const_0p25  , y_margin), color="black", fontsize=_sage_const_25 )
 x = var("x")
 y = sin(_sage_const_2 *x**_sage_const_3 )**_sage_const_2 /x**_sage_const_3  + x
 func = y.diff(x)
 plot_interval = plot(y, _sage_const_0p5 , _sage_const_1p5 )
 x1 = find_root(func, _sage_const_0p8 , _sage_const_1p0 )
 x2 = find_root(func, _sage_const_1p1 , _sage_const_1p2 )
 x3 = find_root(func, _sage_const_1p2 , _sage_const_1p4 )
except:
 _st_.goboom(_sage_const_43 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_45 
 _st_.plot(_sage_const_1 , format='notprovided', _p_=plot(intervals_of_constancy))
except:
 _st_.goboom(_sage_const_45 )
try:
 _st_.current_tex_line = _sage_const_49 
 _st_.plot(_sage_const_2 , format='notprovided', _p_=plot(plot_interval))
except:
 _st_.goboom(_sage_const_49 )
try:
 _st_.current_tex_line = _sage_const_54 
 _st_.inline(_sage_const_0 , latex(x1))
except:
 _st_.goboom(_sage_const_54 )
try:
 _st_.current_tex_line = _sage_const_56 
 _st_.inline(_sage_const_1 , latex(x2))
except:
 _st_.goboom(_sage_const_56 )
try:
 _st_.current_tex_line = _sage_const_58 
 _st_.inline(_sage_const_2 , latex(x3))
except:
 _st_.goboom(_sage_const_58 )
try:
 _st_.current_tex_line = _sage_const_60 
 _st_.inline(_sage_const_3 , latex(x1))
except:
 _st_.goboom(_sage_const_60 )
try:
 _st_.current_tex_line = _sage_const_62 
 _st_.inline(_sage_const_4 , latex(x2))
except:
 _st_.goboom(_sage_const_62 )
try:
 _st_.current_tex_line = _sage_const_62 
 _st_.inline(_sage_const_5 , latex(x3))
except:
 _st_.goboom(_sage_const_62 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_6 , latex(x1))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_7 , latex(x2))
except:
 _st_.goboom(_sage_const_64 )
_st_.current_tex_line = _sage_const_70 
_st_.blockbegin()
try:
 var("x")
 __tmp__=var("x"); y = symbolic_expression(sin(_sage_const_2 *x**_sage_const_3 )**_sage_const_2 /x**_sage_const_3  + x).function(x)
 d_f = y.diff(x)
 graf = plot(d_f, _sage_const_0p5 , _sage_const_1p5 )
 graf += point((x1, _sage_const_0 ), size = _sage_const_30 , color = 'black')
 graf += point((x2, _sage_const_0 ), size = _sage_const_30 , color = 'black')
 graf += point((x3, _sage_const_0 ), size = _sage_const_30 , color = 'black')
except:
 _st_.goboom(_sage_const_78 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_80 
 _st_.plot(_sage_const_3 , format='notprovided', _p_=plot(graf))
except:
 _st_.goboom(_sage_const_80 )
_st_.current_tex_line = _sage_const_95 
_st_.blockbegin()
try:
 var("x")
 __tmp__=var("x"); y = symbolic_expression(sin(_sage_const_2 *x**_sage_const_3 )**_sage_const_2 /x**_sage_const_3  + x).function(x)
 d_f = y.diff(x)
 d_f2 = d_f.diff(x)
except:
 _st_.goboom(_sage_const_100 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_103 
 _st_.inline(_sage_const_8 , latex(x1))
except:
 _st_.goboom(_sage_const_103 )
try:
 _st_.current_tex_line = _sage_const_103 
 _st_.inline(_sage_const_9 , latex(d_f2(x1).n(digits = _sage_const_5 )))
except:
 _st_.goboom(_sage_const_103 )
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_10 , latex(x2))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_11 , latex(d_f2(x2).n(digits = _sage_const_5 )))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_107 
 _st_.inline(_sage_const_12 , latex(x3))
except:
 _st_.goboom(_sage_const_107 )
try:
 _st_.current_tex_line = _sage_const_107 
 _st_.inline(_sage_const_13 , latex(d_f2(x3).n(digits = _sage_const_5 )))
except:
 _st_.goboom(_sage_const_107 )
_st_.current_tex_line = _sage_const_125 
_st_.blockbegin()
try:
 y = sin(_sage_const_2 *x**_sage_const_3 )**_sage_const_2 /x**_sage_const_3  + x
 asimpt = plot(y, -_sage_const_3 , _sage_const_3 )
 if (y.limit(x = _sage_const_0 ) == oo):
     asimpt += plot(_sage_const_0 , linestyle="dashed", color="#FF0000")
 
 
 if (y.limit(x = oo) != oo):
     asimpt += plot(y.limit(x = oo), linestyle="dashed", color="#00FF00")
 
 
 f1 = y(x)/x
 k = f1.limit(x = oo)
 f2 = y(x)-k*x
 b = f2.limit(x = oo)
 if (k != oo and b != oo):
     asimpt += plot(k*x+b, xmin = -_sage_const_2 , xmax = _sage_const_2 , linestyle="dashed", color="#9ACD32")
 
except:
 _st_.goboom(_sage_const_143 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_145 
 _st_.plot(_sage_const_4 , format='notprovided', _p_=plot(asimpt))
except:
 _st_.goboom(_sage_const_145 )
_st_.current_tex_line = _sage_const_14 
_st_.blockbegin()
try:
 matrix_a = matrix([[_sage_const_2 ,-_sage_const_3 ,_sage_const_1 ],[_sage_const_1 ,_sage_const_5 ,-_sage_const_4 ],[_sage_const_4 ,_sage_const_1 ,-_sage_const_3 ]])
 matrix_b = matrix([[_sage_const_2 ],[-_sage_const_5 ],[-_sage_const_4 ]])
except:
 _st_.goboom(_sage_const_17 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_21 
 _st_.inline(_sage_const_14 , latex(matrix_a))
except:
 _st_.goboom(_sage_const_21 )
try:
 _st_.current_tex_line = _sage_const_21 
 _st_.inline(_sage_const_15 , latex(matrix_b))
except:
 _st_.goboom(_sage_const_21 )
try:
 _st_.current_tex_line = _sage_const_26 
 _st_.inline(_sage_const_16 , latex(matrix_a.det()))
except:
 _st_.goboom(_sage_const_26 )
_st_.current_tex_line = _sage_const_51 
_st_.blockbegin()
try:
 matrix_a = matrix([[_sage_const_2 ,-_sage_const_3 ,_sage_const_1 ],[_sage_const_1 ,_sage_const_5 ,-_sage_const_4 ],[_sage_const_4 ,_sage_const_1 ,-_sage_const_3 ]])
 matrix_b = matrix([[_sage_const_2 ],[-_sage_const_5 ],[-_sage_const_4 ]])
 
 new_mat = block_matrix([matrix_a, matrix_b], nrows=_sage_const_1 )
 
 a_rank = matrix_a.rank()
 new_rank = new_mat.rank()
 new_mat = new_mat.echelon_form()
except:
 _st_.goboom(_sage_const_60 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_61 
 _st_.inline(_sage_const_17 , latex(matrix_a.rank()))
except:
 _st_.goboom(_sage_const_61 )
try:
 _st_.current_tex_line = _sage_const_63 
 _st_.inline(_sage_const_18 , latex(new_mat.rank()))
except:
 _st_.goboom(_sage_const_63 )
_st_.current_tex_line = _sage_const_66 
_st_.blockbegin()
try:
 line = _sage_const_3 
 column  = line + _sage_const_1 
 
 x_3 = new_mat[line-_sage_const_1 ][column-_sage_const_1 ]/new_mat[line-_sage_const_1 ][column-_sage_const_2 ]
 x_2 = (new_mat[line-_sage_const_2 ][column-_sage_const_1 ] - x_3*new_mat[line-_sage_const_2 ][column-_sage_const_2 ])/new_mat[line-_sage_const_2 ][column-_sage_const_3 ]
 x_1 = (new_mat[line-_sage_const_3 ][column-_sage_const_1 ]- x_3*new_mat[line-_sage_const_3 ][column-_sage_const_2 ] - x_2*new_mat[line-_sage_const_3 ][column-_sage_const_3 ])/new_mat[line-_sage_const_3 ][column-_sage_const_4 ]
 
 ans = matrix([[x_1],[x_2],[x_3]])
except:
 _st_.goboom(_sage_const_75 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_78 
 _st_.inline(_sage_const_19 , latex(block_matrix([matrix_a, matrix_b], nrows=_sage_const_1 )))
except:
 _st_.goboom(_sage_const_78 )
try:
 _st_.current_tex_line = _sage_const_82 
 _st_.inline(_sage_const_20 , latex(ans))
except:
 _st_.goboom(_sage_const_82 )
_st_.current_tex_line = _sage_const_3 
_st_.blockbegin()
try:
     A = matrix(QQ, [[-_sage_const_2 , _sage_const_4 , -_sage_const_6 ], [-_sage_const_1 , _sage_const_0 , _sage_const_2 ], [_sage_const_4 , _sage_const_4 , _sage_const_2 ]])
     B = matrix(QQ, [[_sage_const_2 , _sage_const_8 , -_sage_const_3 ], [-_sage_const_2 , _sage_const_2 , _sage_const_4 ], [_sage_const_1 , _sage_const_0 , _sage_const_2 ]])
except:
 _st_.goboom(_sage_const_6 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_21 , latex(A))
except:
 _st_.goboom(_sage_const_10 )
try:
 _st_.current_tex_line = _sage_const_10 
 _st_.inline(_sage_const_22 , latex(B))
except:
 _st_.goboom(_sage_const_10 )
_st_.current_tex_line = _sage_const_33 
_st_.blockbegin()
try:
 A = matrix(QQ, [[-_sage_const_2 , _sage_const_4 , -_sage_const_6 ], [-_sage_const_1 , _sage_const_0 , _sage_const_2 ], [_sage_const_4 , _sage_const_4 , _sage_const_2 ]])
 B = matrix(QQ, [[_sage_const_2 , _sage_const_8 , -_sage_const_3 ], [-_sage_const_2 , _sage_const_2 , _sage_const_4 ], [_sage_const_1 , _sage_const_0 , _sage_const_2 ]])
 E = matrix(QQ, [[_sage_const_3 , _sage_const_0 , _sage_const_0 ], [_sage_const_0 , _sage_const_3 , _sage_const_0 ], [_sage_const_0 , _sage_const_0 , _sage_const_3 ]])
 A = A.transpose() / _sage_const_2 
 B = B**_sage_const_2  / _sage_const_4  + E
 X = B * A.inverse()
except:
 _st_.goboom(_sage_const_40 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_44 
 _st_.inline(_sage_const_23 , latex(A))
except:
 _st_.goboom(_sage_const_44 )
try:
 _st_.current_tex_line = _sage_const_44 
 _st_.inline(_sage_const_24 , latex(B))
except:
 _st_.goboom(_sage_const_44 )
try:
 _st_.current_tex_line = _sage_const_48 
 _st_.inline(_sage_const_25 , latex(X))
except:
 _st_.goboom(_sage_const_48 )
_st_.current_tex_line = _sage_const_36 
_st_.blockbegin()
try:
 x, a, b, c, d = var("x", "a", "b", "c", "d")
 y = a*x**_sage_const_3  + b*x**_sage_const_2  + c*x + d;
 y = x**_sage_const_3  -_sage_const_5 *x**_sage_const_2  + _sage_const_7 *x - _sage_const_3 
 
 a = _sage_const_1 
 b = -_sage_const_5 
 c = _sage_const_7 
 d = -_sage_const_3 
 
 var("p", "q")
 p = (_sage_const_3 *a*c - b**_sage_const_2 )/(_sage_const_3 *a**_sage_const_2 )
 q = ((_sage_const_2 *b**_sage_const_3 )/(_sage_const_27 *a**_sage_const_3 )) - ((b*c)/(_sage_const_3 *a**_sage_const_2 ))+ (d/a)
 Q = ((p/_sage_const_3 )**_sage_const_3 ) + ((q/_sage_const_2 )**_sage_const_2 )
except:
 _st_.goboom(_sage_const_50 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_52 
 _st_.inline(_sage_const_26 , latex(y))
except:
 _st_.goboom(_sage_const_52 )
try:
 _st_.current_tex_line = _sage_const_56 
 _st_.inline(_sage_const_27 , latex(p))
except:
 _st_.goboom(_sage_const_56 )
try:
 _st_.current_tex_line = _sage_const_58 
 _st_.inline(_sage_const_28 , latex(q))
except:
 _st_.goboom(_sage_const_58 )
try:
 _st_.current_tex_line = _sage_const_60 
 _st_.inline(_sage_const_29 , latex(Q))
except:
 _st_.goboom(_sage_const_60 )
_st_.current_tex_line = _sage_const_62 
_st_.blockbegin()
try:
 alpha = ((-q/_sage_const_2 ) + sqrt(Q))**(_sage_const_1 /_sage_const_3 )
 beta = ((-q/_sage_const_2 ) - sqrt(Q))**(_sage_const_1 /_sage_const_3 )
 
 epsilon = -_sage_const_1 /_sage_const_2  + (sqrt(-_sage_const_3 ))/_sage_const_2 
 
 z = [alpha + beta
 , alpha*epsilon + beta*epsilon**_sage_const_2 
 , beta*epsilon + alpha*epsilon**_sage_const_2 
 ]
 
 def to_x(_z, _a):
     return _z - _a/_sage_const_3 
 
 def trigonometric_representation(z):
         phi = atan2(z.imag(), z.real()).n(digits=_sage_const_4 )
         z_abs = z.abs().n(digits=_sage_const_4 )
         z_trig = z_abs*(cos(phi, hold=True) + I*sin(phi, hold=True))
 
 def exponential_representation(z):
         phi = atan2(z.imag(), z.real()).n(digits=_sage_const_4 )
         z_abs = z.abs().n(digits=_sage_const_4 )
 
except:
 _st_.goboom(_sage_const_85 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_91 
 _st_.inline(_sage_const_30 , latex(to_x(z[_sage_const_0 ], b/a)))
except:
 _st_.goboom(_sage_const_91 )
try:
 _st_.current_tex_line = _sage_const_93 
 _st_.inline(_sage_const_31 , latex(_sage_const_3 ))
except:
 _st_.goboom(_sage_const_93 )
try:
 _st_.current_tex_line = _sage_const_95 
 _st_.inline(_sage_const_32 , latex(to_x(z[_sage_const_0 ], b/a)))
except:
 _st_.goboom(_sage_const_95 )
try:
 _st_.current_tex_line = _sage_const_97 
 _st_.inline(_sage_const_33 , latex(to_x(z[_sage_const_1 ], b/a).real()))
except:
 _st_.goboom(_sage_const_97 )
try:
 _st_.current_tex_line = _sage_const_99 
 _st_.inline(_sage_const_34 , latex(to_x(z[_sage_const_1 ], b/a).real()))
except:
 _st_.goboom(_sage_const_99 )
try:
 _st_.current_tex_line = _sage_const_99 
 _st_.inline(_sage_const_35 , latex(to_x(z[_sage_const_1 ], b/a).real()))
except:
 _st_.goboom(_sage_const_99 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_36 , latex(to_x(z[_sage_const_1 ], b/a).real()))
except:
 _st_.goboom(_sage_const_101 )
_st_.current_tex_line = _sage_const_103 
_st_.blockbegin()
try:
     __tmp__=var("x"); f = symbolic_expression(a*x**_sage_const_3  + b*x**_sage_const_2  + c*x + d).function(x)
     grapfic = plot(f(x), -_sage_const_2 , _sage_const_4 )
     grapfic += point((find_root(f, _sage_const_1 , _sage_const_1p5 ), _sage_const_0 ), size = _sage_const_50 , color = 'red')
     grapfic += point((find_root(f, _sage_const_2p9 , _sage_const_3p1 ), _sage_const_0 ), size = _sage_const_50 , color = 'red')
except:
 _st_.goboom(_sage_const_108 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_110 
 _st_.plot(_sage_const_5 , format='notprovided', _p_=plot(grapfic))
except:
 _st_.goboom(_sage_const_110 )
_st_.current_tex_line = _sage_const_2 
_st_.blockbegin()
try:
 x = var("x")
 f_x = x**_sage_const_4  + _sage_const_3 *x**_sage_const_3  - _sage_const_4 *x**_sage_const_2  - _sage_const_3 *x + _sage_const_3 
 a = _sage_const_3 
 b = -_sage_const_4 
 c = -_sage_const_3 
 d = _sage_const_3 
 y = var("y")
 polynom = f_x(x = y - _sage_const_3 /_sage_const_4 ).expand().simplify_full()
 
 pqr = {'p':-_sage_const_59 /_sage_const_8 , 'q': _sage_const_51 /_sage_const_8 , 'r': _sage_const_525 /_sage_const_256 }
 var("s p q r")
 resolvent = _sage_const_2 *s**_sage_const_3  - p*s**_sage_const_2  - _sage_const_2 *r*s + r*p - q**_sage_const_2 /_sage_const_4 
 
 poly_s_n = resolvent(**pqr)
 
 sols = solve(poly_s_n, s)
 s_0 = sols[_sage_const_2 ].rhs()
 
 var("y s p q")
 poly_y_1 = y**_sage_const_2  - y*sqrt(_sage_const_2 *s - p) + q/(_sage_const_2 *sqrt(_sage_const_2 *s - p)) + s
 poly_y_2 = y**_sage_const_2  + y*sqrt(_sage_const_2 *s - p) - q/(_sage_const_2 *sqrt(_sage_const_2 *s - p)) + s
 
 poly_y_1_n = poly_y_1(**pqr, s=s_0)
 poly_y_2_n = poly_y_2(**pqr, s=s_0)
 
 sols = solve(poly_y_1_n, y)
 sols.extend(solve(poly_y_2_n, y))
 
 sols = solve(f_x, x)
 graf = plot(f_x, -_sage_const_4 , _sage_const_2 )
 for i, sol in enumerate(sols):
     a = sol.rhs()
     graf += point((a, _sage_const_0 ), size = _sage_const_40 , color = 'black')
 
except:
 _st_.goboom(_sage_const_37 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_38 
 _st_.inline(_sage_const_37 , latex(f_x))
except:
 _st_.goboom(_sage_const_38 )
try:
 _st_.current_tex_line = _sage_const_60 
 _st_.inline(_sage_const_38 , latex(polynom))
except:
 _st_.goboom(_sage_const_60 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_39 , latex(b - (_sage_const_3 *a**_sage_const_2 )/_sage_const_8 ))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_66 
 _st_.inline(_sage_const_40 , latex((a**_sage_const_3 ) / _sage_const_8  - (a*b)/_sage_const_2  + c))
except:
 _st_.goboom(_sage_const_66 )
try:
 _st_.current_tex_line = _sage_const_68 
 _st_.inline(_sage_const_41 , latex((-_sage_const_3 *a**_sage_const_4  )/ _sage_const_256  +( a**_sage_const_2 *b) / _sage_const_16  - (c*a) / _sage_const_4  + d))
except:
 _st_.goboom(_sage_const_68 )
try:
 _st_.current_tex_line = _sage_const_71 
 _st_.inline(_sage_const_42 , latex(resolvent))
except:
 _st_.goboom(_sage_const_71 )
try:
 _st_.current_tex_line = _sage_const_73 
 _st_.inline(_sage_const_43 , latex(poly_s_n))
except:
 _st_.goboom(_sage_const_73 )
try:
 _st_.current_tex_line = _sage_const_75 
 _st_.inline(_sage_const_44 , latex(s_0))
except:
 _st_.goboom(_sage_const_75 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_45 , latex(poly_y_1_n))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_46 , latex(poly_y_2_n))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_82 
 _st_.inline(_sage_const_47 , latex(sols[_sage_const_0 ].rhs().n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_82 )
try:
 _st_.current_tex_line = _sage_const_84 
 _st_.inline(_sage_const_48 , latex(sols[_sage_const_1 ].rhs().n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_84 )
try:
 _st_.current_tex_line = _sage_const_86 
 _st_.inline(_sage_const_49 , latex(sols[_sage_const_2 ].rhs().n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_86 )
try:
 _st_.current_tex_line = _sage_const_88 
 _st_.inline(_sage_const_50 , latex(sols[_sage_const_3 ].rhs().n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_88 )
try:
 _st_.current_tex_line = _sage_const_90 
 _st_.plot(_sage_const_6 , format='notprovided', _p_=plot(graf))
except:
 _st_.goboom(_sage_const_90 )
_st_.current_tex_line = _sage_const_30 
_st_.blockbegin()
try:
 R = QQ['x']; (x,) = R._first_ngens(1)
 f = x**_sage_const_4  + x**_sage_const_3  - _sage_const_2 *x**_sage_const_2  - x**_sage_const_1  - _sage_const_1 
 g = x**_sage_const_3  + x**_sage_const_2  - x - _sage_const_1 
 
 def GCD(a, b):
     if a == _sage_const_0 :
         return (b, _sage_const_0 , _sage_const_1 )
     else:
         div, x, y = GCD(b % a, a)
 
     return(div, y - (b // a) * x, x)
 
 
 div, u, v = GCD(g, f)
 
 if(f != _sage_const_0  and g != _sage_const_0 ):
     _gcd = div.monic() # Return this polynomial divided by its leading coefficient
     norm_coeff = _gcd / div
     v = v * norm_coeff
     u = u * norm_coeff
 else:
     _gcd = div
     u = _sage_const_0 
     v = _sage_const_0 
except:
 _st_.goboom(_sage_const_55 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_57 
 _st_.inline(_sage_const_51 , latex(f))
except:
 _st_.goboom(_sage_const_57 )
try:
 _st_.current_tex_line = _sage_const_57 
 _st_.inline(_sage_const_52 , latex(g))
except:
 _st_.goboom(_sage_const_57 )
try:
 _st_.current_tex_line = _sage_const_59 
 _st_.inline(_sage_const_53 , latex(_gcd))
except:
 _st_.goboom(_sage_const_59 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_54 , latex(f))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_55 , latex(u))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_56 , latex(v))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_57 , latex(g))
except:
 _st_.goboom(_sage_const_64 )
try:
 _st_.current_tex_line = _sage_const_64 
 _st_.inline(_sage_const_58 , latex(_gcd))
except:
 _st_.goboom(_sage_const_64 )
_st_.current_tex_line = _sage_const_3 
_st_.blockbegin()
try:
 A = Matrix([[_sage_const_3 , -_sage_const_1 , -_sage_const_2 ], [_sage_const_2 , _sage_const_1 , -_sage_const_3 ], [_sage_const_1 , _sage_const_0 , -_sage_const_1 ]])
 
 S = Matrix([[_sage_const_1 , _sage_const_1 , _sage_const_1 ], [_sage_const_1 , _sage_const_1 , _sage_const_0 ], [_sage_const_0 , _sage_const_2 , _sage_const_1 ]])
 e1, e2, e3 = var("e_1 e_2 e_3")
 ve = vector([e1, e2, e3])
 vec = []
 for i, row in enumerate(S * ve):
     vec.append(row)
 
 S = S.transpose()
 A_new = S**(-_sage_const_1 )*A*S
 
 R = QQ['x']; (x,) = R._first_ngens(1)
 
 phi_A = det(A - x*identity_matrix(_sage_const_3 )).monic()
 
 lam = var("lambda_")
 f = phi_A(lam)
 
 sols = solve(f, lam, solution_dict=True)
 
except:
 _st_.goboom(_sage_const_25 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_26 
 _st_.inline(_sage_const_59 , latex(A))
except:
 _st_.goboom(_sage_const_26 )
try:
 _st_.current_tex_line = _sage_const_28 
 _st_.inline(_sage_const_60 , latex(vec[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_28 )
try:
 _st_.current_tex_line = _sage_const_30 
 _st_.inline(_sage_const_61 , latex(vec[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_30 )
try:
 _st_.current_tex_line = _sage_const_32 
 _st_.inline(_sage_const_62 , latex(vec[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_32 )
try:
 _st_.current_tex_line = _sage_const_40 
 _st_.inline(_sage_const_63 , latex(A_new))
except:
 _st_.goboom(_sage_const_40 )
try:
 _st_.current_tex_line = _sage_const_48 
 _st_.inline(_sage_const_64 , latex(f))
except:
 _st_.goboom(_sage_const_48 )
try:
 _st_.current_tex_line = _sage_const_52 
 _st_.inline(_sage_const_65 , latex(f))
except:
 _st_.goboom(_sage_const_52 )
try:
 _st_.current_tex_line = _sage_const_56 
 _st_.inline(_sage_const_66 , latex(sols[_sage_const_0 ][lam].n(digits=_sage_const_3 )))
except:
 _st_.goboom(_sage_const_56 )
try:
 _st_.current_tex_line = _sage_const_58 
 _st_.inline(_sage_const_67 , latex(sols[_sage_const_1 ][lam].n(digits=_sage_const_3 )))
except:
 _st_.goboom(_sage_const_58 )
try:
 _st_.current_tex_line = _sage_const_60 
 _st_.inline(_sage_const_68 , latex(sols[_sage_const_2 ][lam].n(digits=_sage_const_3 )))
except:
 _st_.goboom(_sage_const_60 )
_st_.current_tex_line = _sage_const_3 
_st_.blockbegin()
try:
 coefs = [_sage_const_0 , _sage_const_0 , _sage_const_3 , -_sage_const_6 , _sage_const_4 , _sage_const_0 , -_sage_const_1 , -_sage_const_1 , _sage_const_1 , -_sage_const_10 ]
 a11, a22, a33, a12, a13, a23, a14, a24, a34, a44 = coefs
 a14 /= _sage_const_2 
 a24 /= _sage_const_2 
 a34 /= _sage_const_2 
 a12 /= _sage_const_2 
 a13 /= _sage_const_2 
 a23 /= _sage_const_2 
 
 var("x y z")
 f_src = a11*x**_sage_const_2  + a22*y**_sage_const_2  + a33*z**_sage_const_2 \
 + _sage_const_2 *a12*x*y + _sage_const_2 *a13*x*z + _sage_const_2 *a23*y*z\
 + _sage_const_2 *a14*x + _sage_const_2 *a24*y + _sage_const_2 *a34*z\
 + a44
 
 
 var('x y z')
 
 plot_ = implicit_plot3d(f_src, (-_sage_const_10 ,_sage_const_10 ), (-_sage_const_10 , _sage_const_10 ), (-_sage_const_10 , _sage_const_10 ), plot_points=_sage_const_100 )
 
 A = Matrix([
 [a11, a12, a13]
 , [a12, a22, a23]
 , [a13, a23, a33]
 ])
 
 a = Matrix([[a14], [a24], [a34]])
 
 phi_A = A.charpoly()
 lam = var("lambda_")
 f = phi_A(lam)
 
 ssols = A.eigenvalues()
 resvec = A.eigenvectors_left()
 res = []
 res_vec = []
 for i, ssol in enumerate(ssols):
     res.append(ssol.n(digits=_sage_const_4 ))
     res_vec.append(resvec[i][_sage_const_1 ])
 
 vectors = []
 for i in range (_sage_const_3 ):
     vectors.append(res_vec[i][_sage_const_0 ].n(digits=_sage_const_4 ) / (sqrt((res_vec[i][_sage_const_0 ][_sage_const_0 ].n(digits=_sage_const_4 ))**_sage_const_2  + (res_vec[i][_sage_const_0 ][_sage_const_1 ].n(digits=_sage_const_4 ))**_sage_const_2  + (res_vec[i][_sage_const_0 ][_sage_const_2 ].n(digits=_sage_const_4 ))**_sage_const_2 )))
 
 
 S = Matrix([vectors[_sage_const_0 ], vectors[_sage_const_1 ], vectors[_sage_const_2 ]])
 
 a_ = S.transpose()*a
 
 new_f = res[_sage_const_0 ] * x**_sage_const_2  + res[_sage_const_1 ] * y**_sage_const_2  + res[_sage_const_2 ] * z**_sage_const_2  + _sage_const_2 *a_[_sage_const_0 ][_sage_const_0 ]*x + _sage_const_2 *a_[_sage_const_1 ][_sage_const_0 ] * y + _sage_const_2 * a_[_sage_const_2 ][_sage_const_0 ] * z + a44
 
 new1_f = res[_sage_const_0 ] * (x + a_[_sage_const_0 ][_sage_const_0 ] / res[_sage_const_0 ])**_sage_const_2  + res[_sage_const_1 ] * (y + a_[_sage_const_1 ][_sage_const_0 ] / res[_sage_const_1 ])**_sage_const_2  + res[_sage_const_2 ] * (z + a_[_sage_const_2 ][_sage_const_0 ] / res[_sage_const_2 ])**_sage_const_2 
 new1_f2 = (a_[_sage_const_0 ][_sage_const_0 ])**_sage_const_2  / res[_sage_const_0 ] + (a_[_sage_const_1 ][_sage_const_0 ])**_sage_const_2  / res[_sage_const_1 ] + (a_[_sage_const_2 ][_sage_const_0 ])**_sage_const_2  / res[_sage_const_2 ] - a44
 
 new1_f = new1_f / new1_f2
 var('X Y Z')
 kanon_f = new1_f(x = X - a_[_sage_const_0 ][_sage_const_0 ] / res[_sage_const_0 ], y = Y - a_[_sage_const_1 ][_sage_const_0 ] / res[_sage_const_1 ], z = Z - a_[_sage_const_2 ][_sage_const_0 ] / res[_sage_const_2 ]) 
 
 new_plot = implicit_plot3d(kanon_f - _sage_const_1 , (-_sage_const_10 ,_sage_const_10 ), (-_sage_const_10 , _sage_const_10 ), (-_sage_const_10 , _sage_const_10 ), plot_points=_sage_const_100 )
 
 
except:
 _st_.goboom(_sage_const_65 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_67 
 _st_.inline(_sage_const_69 , latex(f_src))
except:
 _st_.goboom(_sage_const_67 )
try:
 _st_.current_tex_line = _sage_const_69 
 _st_.plot(_sage_const_7 , format='notprovided', _p_=plot(plot_))
except:
 _st_.goboom(_sage_const_69 )
try:
 _st_.current_tex_line = _sage_const_76 
 _st_.inline(_sage_const_70 , latex(A))
except:
 _st_.goboom(_sage_const_76 )
try:
 _st_.current_tex_line = _sage_const_76 
 _st_.inline(_sage_const_71 , latex(B))
except:
 _st_.goboom(_sage_const_76 )
try:
 _st_.current_tex_line = _sage_const_81 
 _st_.inline(_sage_const_72 , latex(f))
except:
 _st_.goboom(_sage_const_81 )
try:
 _st_.current_tex_line = _sage_const_86 
 _st_.inline(_sage_const_73 , latex(res[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_86 )
try:
 _st_.current_tex_line = _sage_const_86 
 _st_.inline(_sage_const_74 , latex(res[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_86 )
try:
 _st_.current_tex_line = _sage_const_86 
 _st_.inline(_sage_const_75 , latex(res[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_86 )
try:
 _st_.current_tex_line = _sage_const_91 
 _st_.inline(_sage_const_76 , latex(res_vec[_sage_const_0 ][_sage_const_0 ].n(digits=_sage_const_4 )))
except:
 _st_.goboom(_sage_const_91 )
try:
 _st_.current_tex_line = _sage_const_93 
 _st_.inline(_sage_const_77 , latex(res_vec[_sage_const_1 ][_sage_const_0 ].n(digits=_sage_const_4 )))
except:
 _st_.goboom(_sage_const_93 )
try:
 _st_.current_tex_line = _sage_const_95 
 _st_.inline(_sage_const_78 , latex(res_vec[_sage_const_2 ][_sage_const_0 ].n(digits=_sage_const_4 )))
except:
 _st_.goboom(_sage_const_95 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_79 , latex(vectors[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_103 
 _st_.inline(_sage_const_80 , latex(vectors[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_103 )
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_81 , latex(vectors[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_110 
 _st_.inline(_sage_const_82 , latex(S))
except:
 _st_.goboom(_sage_const_110 )
try:
 _st_.current_tex_line = _sage_const_115 
 _st_.inline(_sage_const_83 , latex(a_))
except:
 _st_.goboom(_sage_const_115 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_84 , latex(new_f))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_131 
 _st_.inline(_sage_const_85 , latex(new1_f))
except:
 _st_.goboom(_sage_const_131 )
try:
 _st_.current_tex_line = _sage_const_131 
 _st_.inline(_sage_const_86 , latex(new1_f2))
except:
 _st_.goboom(_sage_const_131 )
try:
 _st_.current_tex_line = _sage_const_134 
 _st_.inline(_sage_const_87 , latex(new1_f))
except:
 _st_.goboom(_sage_const_134 )
try:
 _st_.current_tex_line = _sage_const_141 
 _st_.inline(_sage_const_88 , latex(kanon_f))
except:
 _st_.goboom(_sage_const_141 )
try:
 _st_.current_tex_line = _sage_const_145 
 _st_.plot(_sage_const_8 , format='notprovided', _p_=plot(new_plot))
except:
 _st_.goboom(_sage_const_145 )
_st_.current_tex_line = _sage_const_3 
_st_.blockbegin()
try:
 import numpy
 var("x")
 
 y = (_sage_const_8 *x - arctan(_sage_const_2 *x)) / (_sage_const_4 *x**_sage_const_2  + _sage_const_1 )
 a = _sage_const_0  # нижний предел
 b = e # верхний предел
 
 plot1 = plot(y, a, b)
 
 fill_plot1 = plot(y, a, b, fill = True, fillcolor = "red", title = "Необходимо найти площадь закрашенной фигуры")
 
 # метод прямоугольников
 
 dx = _sage_const_0p1  # приращение x
 
 graph_rectangle = plot(y, a, b)
 result_rectangle = _sage_const_0 
 rectangles = []
 iteration_rect = []
 
 for i, xi in enumerate(numpy.arange(a, b , dx)):
     dy = y(xi) # приращение y
     result_rectangle += dx*dy; # площадь маленького прямоугольника из которых будет состоять общая площадь
 
     text_ = text(r"$i={}, curr={}, result={}$".format(i, str((dx*dy).n(digits=_sage_const_4 )),str(result_rectangle.n(digits=_sage_const_4 ))), (_sage_const_1 ,-_sage_const_0p5 ), fontsize=_sage_const_12 , color="black")
 
     rectangles.append(
         polygon2d([(xi, _sage_const_0 ),
         (xi + dx, _sage_const_0 ),
         (xi + dx, dy),
         (xi, dy)])
         )
     graph_rectangle += plot(rectangles[-_sage_const_1 ])
 
     if (i < _sage_const_5 ):
         iteration_rect.append(graph_rectangle)
 
 
 # метод трапеций
 
 dx_ = _sage_const_0p3 
 
 graph_trapezoid = plot(y, a, b)
 result_trapezoid = _sage_const_0 
 trapezoids = []
 iteration_trap = []
 
 
 for i, xi in enumerate(numpy.arange(a, b , dx_)):
     dy1 = y(xi)
     dy2 = y(xi + dx_)
     result_trapezoid += (dy1 + dy2) / _sage_const_2  * dx_ # площадь маленькой трапеции из которых будет состоять общая площадь
 
     trapezoids.append(
         polygon2d([(xi, _sage_const_0 ),
         (xi + dx_, _sage_const_0 ),
         (xi + dx_, dy2),
         (xi, dy1)])
     )
 
     graph_trapezoid += plot(trapezoids[-_sage_const_1 ])
 
     if i < _sage_const_5 :
         iteration_trap.append(graph_trapezoid)
 
 result_sage, e = numerical_integral(y, a, b)
 
except:
 _st_.goboom(_sage_const_71 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_75 
 _st_.inline(_sage_const_89 , latex(a))
except:
 _st_.goboom(_sage_const_75 )
try:
 _st_.current_tex_line = _sage_const_75 
 _st_.inline(_sage_const_90 , latex(b))
except:
 _st_.goboom(_sage_const_75 )
try:
 _st_.current_tex_line = _sage_const_75 
 _st_.inline(_sage_const_91 , latex(y))
except:
 _st_.goboom(_sage_const_75 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.plot(_sage_const_9 , format='notprovided', _p_=plot(fill_plot1))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_91 
 _st_.plot(_sage_const_10 , format='notprovided', _p_=plot(iteration_rect[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_91 )
try:
 _st_.current_tex_line = _sage_const_92 
 _st_.plot(_sage_const_11 , format='notprovided', _p_=plot(iteration_rect[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_92 )
try:
 _st_.current_tex_line = _sage_const_94 
 _st_.plot(_sage_const_12 , format='notprovided', _p_=plot(iteration_rect[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_94 )
try:
 _st_.current_tex_line = _sage_const_95 
 _st_.plot(_sage_const_13 , format='notprovided', _p_=plot(iteration_rect[_sage_const_3 ]))
except:
 _st_.goboom(_sage_const_95 )
try:
 _st_.current_tex_line = _sage_const_98 
 _st_.inline(_sage_const_92 , latex(dx.n(digits = _sage_const_2 )))
except:
 _st_.goboom(_sage_const_98 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_93 , latex(a))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_94 , latex(b))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_95 , latex(y))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_96 , latex(result_rectangle))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_113 
 _st_.plot(_sage_const_14 , format='notprovided', _p_=plot(iteration_trap[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_113 )
try:
 _st_.current_tex_line = _sage_const_114 
 _st_.plot(_sage_const_15 , format='notprovided', _p_=plot(iteration_trap[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_114 )
try:
 _st_.current_tex_line = _sage_const_116 
 _st_.plot(_sage_const_16 , format='notprovided', _p_=plot(iteration_trap[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_116 )
try:
 _st_.current_tex_line = _sage_const_117 
 _st_.plot(_sage_const_17 , format='notprovided', _p_=plot(iteration_trap[_sage_const_3 ]))
except:
 _st_.goboom(_sage_const_117 )
try:
 _st_.current_tex_line = _sage_const_120 
 _st_.inline(_sage_const_97 , latex(dx_.n(digits = _sage_const_2 )))
except:
 _st_.goboom(_sage_const_120 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_98 , latex(a))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_99 , latex(b))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_100 , latex(y))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_101 , latex(result_trapezoid))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_128 
 _st_.inline(_sage_const_102 , latex(a))
except:
 _st_.goboom(_sage_const_128 )
try:
 _st_.current_tex_line = _sage_const_128 
 _st_.inline(_sage_const_103 , latex(b))
except:
 _st_.goboom(_sage_const_128 )
try:
 _st_.current_tex_line = _sage_const_128 
 _st_.inline(_sage_const_104 , latex(y))
except:
 _st_.goboom(_sage_const_128 )
try:
 _st_.current_tex_line = _sage_const_128 
 _st_.inline(_sage_const_105 , latex(result_sage))
except:
 _st_.goboom(_sage_const_128 )
_st_.current_tex_line = _sage_const_2 
_st_.blockbegin()
try:
 def newton(f, a, b):
     x1 = a
     x2 = (a + b) / _sage_const_2 
     df = f.derivative()
     while abs(x2 - x1) >= _sage_const_0p0000001 :
         x1 = x2
         x2 = x1 - f(x=x1)/df(x=x1)
     return x1
except:
 _st_.goboom(_sage_const_11 )
_st_.blockend()
_st_.current_tex_line = _sage_const_13 
_st_.blockbegin()
try:
 func = (x**_sage_const_2  + _sage_const_3 *cos(_sage_const_1 /_sage_const_2 *x**_sage_const_2 ) - _sage_const_1 ) / (_sage_const_3 *x) - _sage_const_1 /_sage_const_3 
 
 x_1 = newton(func, _sage_const_1p5 , _sage_const_2p0 )
 x_2 = newton(func, _sage_const_2p8 , _sage_const_2p9 )
 
 p1 = plot(func, xmin = _sage_const_1 , xmax = _sage_const_3 )
 p1 += point((x_1, _sage_const_0 ), color="red", size=_sage_const_30 , zorder=_sage_const_20 )
 p1 += point((x_2, _sage_const_0 ), color="red", size=_sage_const_30 , zorder=_sage_const_20 )
 
 x, y = var("x,y")
 x1 = _sage_const_1p5 
 x2 = (_sage_const_1p5  + _sage_const_2p0 )/_sage_const_2 
 grafic1 = plot(p1)
 df = func.derivative()
 df2 = df.diff(x)
 
 tangent1 = []
 while abs(x2 - x1) >= _sage_const_0p0000001 :
     x1 = x2
     x2 = x1 - func(x=x1) / df(x=x1)
     l = df(x1)*(x - x1) + func(x=x1)
     i = _sage_const_2 
     if i:
         tangent1.append(plot(l, xmin = _sage_const_1 , xmax = _sage_const_3 , color="red") + text((r"$y={}$" + "\n" + r"$x_1={}, x_2={}$").format(latex(l), x1, x2), (_sage_const_2 , -_sage_const_1 ), fontsize=_sage_const_12 , color="black"))
         i -= _sage_const_1 
 
 x1 = _sage_const_2p8 
 x2 = (_sage_const_2p8  + _sage_const_2p9 )/_sage_const_2 
 df = func.derivative()
 
 tangent2 = []
 while abs(x2 - x1) >= _sage_const_0p0000001 :
     x1 = x2
     x2 = x1 - func(x=x1) / df(x=x1)
     l = df(x1)*(x - x1) + func(x=x1)
     i = _sage_const_2 
     if i:
         tangent2.append(plot(l, xmin = _sage_const_1 , xmax = _sage_const_3 , color="red") + text((r"$y={}$" + "\n" + r"$x_1={}, x_2={}$").format(latex(l), x1, x2), (_sage_const_2 , -_sage_const_1 ), fontsize=_sage_const_12 , color="black"))
         i -= _sage_const_1 
except:
 _st_.goboom(_sage_const_53 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_73 
 _st_.inline(_sage_const_106 , latex(func))
except:
 _st_.goboom(_sage_const_73 )
try:
 _st_.current_tex_line = _sage_const_75 
 _st_.plot(_sage_const_18 , format='notprovided', _p_=plot(func, _sage_const_1 , _sage_const_3 ))
except:
 _st_.goboom(_sage_const_75 )
try:
 _st_.current_tex_line = _sage_const_77 
 _st_.inline(_sage_const_107 , latex(x_1.n(digits=_sage_const_6 )))
except:
 _st_.goboom(_sage_const_77 )
try:
 _st_.current_tex_line = _sage_const_77 
 _st_.inline(_sage_const_108 , latex(x_2.n(digits=_sage_const_6 )))
except:
 _st_.goboom(_sage_const_77 )
try:
 _st_.current_tex_line = _sage_const_81 
 _st_.plot(_sage_const_19 , format='notprovided', _p_=grafic1 + tangent1[_sage_const_0 ])
except:
 _st_.goboom(_sage_const_81 )
try:
 _st_.current_tex_line = _sage_const_82 
 _st_.plot(_sage_const_20 , format='notprovided', _p_=grafic1 + tangent2[_sage_const_0 ])
except:
 _st_.goboom(_sage_const_82 )
try:
 _st_.current_tex_line = _sage_const_84 
 _st_.plot(_sage_const_21 , format='notprovided', _p_=grafic1 + tangent1[_sage_const_1 ])
except:
 _st_.goboom(_sage_const_84 )
try:
 _st_.current_tex_line = _sage_const_85 
 _st_.plot(_sage_const_22 , format='notprovided', _p_=grafic1 + tangent2[_sage_const_1 ])
except:
 _st_.goboom(_sage_const_85 )
try:
 _st_.current_tex_line = _sage_const_97 
 _st_.inline(_sage_const_109 , latex(abs(_sage_const_1 /df(x = _sage_const_2 )).n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_97 )
try:
 _st_.current_tex_line = _sage_const_99 
 _st_.inline(_sage_const_110 , latex(abs(func(x = _sage_const_2 )/df(x = _sage_const_2 )).n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_99 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_111 , latex(abs(df2(x = _sage_const_2 )).n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_112 , latex(abs(df2(x = _sage_const_2 )).n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_113 , latex((_sage_const_1  / (_sage_const_2  * abs(_sage_const_1 /df(x = _sage_const_2 )) * abs(func(x = _sage_const_2 )/df(x = _sage_const_2 )))).n(digits = _sage_const_4 )))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_108 
 _st_.inline(_sage_const_114 , latex(((_sage_const_1  - (sqrt(_sage_const_1  - _sage_const_2 *abs(_sage_const_1 /df(x = _sage_const_2 )) * abs(func(x = _sage_const_2 )/df(x = _sage_const_2 )) * abs(df2(x = _sage_const_2 ))))) / (abs(_sage_const_1 /df(x = _sage_const_2 )) * abs(func(x = _sage_const_2 )/df(x = _sage_const_2 )))).n(digits = _sage_const_5 )))
except:
 _st_.goboom(_sage_const_108 )
_st_.current_tex_line = _sage_const_3 
_st_.blockbegin()
try:
 def to_x(_z, _a):
     return _z - _a/_sage_const_3 
except:
 _st_.goboom(_sage_const_6 )
_st_.blockend()
_st_.current_tex_line = _sage_const_8 
_st_.blockbegin()
try:
 import copy as cp
 A = Matrix([[_sage_const_2 , _sage_const_0 , -_sage_const_1 ], [_sage_const_1 , _sage_const_1 , -_sage_const_1 ], [-_sage_const_1 , _sage_const_0 , _sage_const_2 ]])
 B = Matrix([[_sage_const_0 ], [_sage_const_0 ], [_sage_const_0 ]])
 R = QQ['x']; (x,) = R._first_ngens(1)
 phi_A = det(A - x*identity_matrix(_sage_const_3 )).monic()
 # метод Кардано для поиска собственных чисел
 x, a, b, c, d = var("x", "a", "b", "c", "d")
 a = _sage_const_1 
 b = -_sage_const_5 
 c = _sage_const_7 
 d = -_sage_const_3 
 y = a*x**_sage_const_3  + b*x**_sage_const_2  + c*x + d;
 var("p", "q")
 p = (_sage_const_3 *a*c - b**_sage_const_2 )/(_sage_const_3 *a**_sage_const_2 )
 q = ((_sage_const_2 *b**_sage_const_3 )/(_sage_const_27 *a**_sage_const_3 )) - ((b*c)/(_sage_const_3 *a**_sage_const_2 ))+ (d/a)
 Q = ((p/_sage_const_3 )**_sage_const_3 ) + ((q/_sage_const_2 )**_sage_const_2 )
 alpha = ((-q/_sage_const_2 ) + sqrt(Q))**(_sage_const_1 /_sage_const_3 )
 beta = ((-q/_sage_const_2 ) - sqrt(Q))**(_sage_const_1 /_sage_const_3 )
 epsilon = -_sage_const_1 /_sage_const_2  + (sqrt(-_sage_const_3 ))/_sage_const_2 
 
 res = [alpha + beta
 , alpha*epsilon + beta*epsilon**_sage_const_2 
 , beta*epsilon + alpha*epsilon**_sage_const_2 
 ]
 
 result_phi = []
 result_matrix = []
 vectors = []
 result_vectors = []
 
 for i, z_i in enumerate(res):
     x_i = to_x(_z = z_i, _a = b/a)
     result_phi.append(x_i.n(digits=_sage_const_2 ).real())
 
 
 for i, lam1 in enumerate(result_phi):
     mat = A - (identity_matrix(_sage_const_3 ) * lam1)
     mat = mat.echelon_form()
     result_matrix.append(mat)
 
 for i, lam1 in enumerate(result_phi):
     vectors.append(result_matrix[i].right_kernel().basis())
     result_vectors.append(vectors[i][_sage_const_0 ])
 
 new_basis = Matrix([[_sage_const_1 , _sage_const_1 , _sage_const_0 ], [_sage_const_1 , -_sage_const_1 , _sage_const_1 ], [_sage_const_0 , _sage_const_1 , -_sage_const_1 ]])
 new_basis_result = []
 for i, lam1 in enumerate(result_vectors):
     new_basis_result.append(new_basis.inverse() * result_vectors[i])
 
 S = Matrix([[_sage_const_1 , _sage_const_1 , -_sage_const_1 ], [_sage_const_1 , _sage_const_0 , _sage_const_1 ], [_sage_const_0 , _sage_const_1 , _sage_const_0 ]])
 S = S.transpose()
 v2 = Matrix(QQ, [_sage_const_0p00 , _sage_const_1p0 , _sage_const_0p00 ])
 A = Matrix([[_sage_const_2 ,_sage_const_0 ,-_sage_const_1 ],[_sage_const_1 ,_sage_const_1 ,-_sage_const_1 ],[-_sage_const_1 ,_sage_const_0 ,_sage_const_2 ]])
 J = S.inverse() * A * S
 J_sage = A.jordan_form()
 
 M = (J * A.inverse()).inverse()
 
 coefficients_ = phi_A.coefficients()
 for i in range(_sage_const_4 ):
     coefficients_[i] = coefficients_[i] * -_sage_const_1 
 
 A1 = (coefficients_[_sage_const_3 ]*A**_sage_const_2  + coefficients_[_sage_const_2 ]*A + coefficients_[_sage_const_1 ]*identity_matrix(_sage_const_3 ))/-coefficients_[_sage_const_0 ]
 A3 = coefficients_[_sage_const_2 ]*A*A + coefficients_[_sage_const_1 ]*A + coefficients_[_sage_const_0 ]
 
 
except:
 _st_.goboom(_sage_const_75 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_115 , latex(A))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_85 
 _st_.inline(_sage_const_116 , latex(phi_A))
except:
 _st_.goboom(_sage_const_85 )
try:
 _st_.current_tex_line = _sage_const_87 
 _st_.inline(_sage_const_117 , latex(result_phi[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_87 )
try:
 _st_.current_tex_line = _sage_const_89 
 _st_.inline(_sage_const_118 , latex(result_phi[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_89 )
try:
 _st_.current_tex_line = _sage_const_91 
 _st_.inline(_sage_const_119 , latex(result_phi[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_91 )
try:
 _st_.current_tex_line = _sage_const_97 
 _st_.inline(_sage_const_120 , latex(result_matrix[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_97 )
try:
 _st_.current_tex_line = _sage_const_98 
 _st_.inline(_sage_const_121 , latex(result_vectors[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_98 )
try:
 _st_.current_tex_line = _sage_const_100 
 _st_.inline(_sage_const_122 , latex(result_matrix[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_100 )
try:
 _st_.current_tex_line = _sage_const_101 
 _st_.inline(_sage_const_123 , latex(result_vectors[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_101 )
try:
 _st_.current_tex_line = _sage_const_103 
 _st_.inline(_sage_const_124 , latex(result_matrix[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_103 )
try:
 _st_.current_tex_line = _sage_const_104 
 _st_.inline(_sage_const_125 , latex(v2))
except:
 _st_.goboom(_sage_const_104 )
try:
 _st_.current_tex_line = _sage_const_107 
 _st_.inline(_sage_const_126 , latex(new_basis))
except:
 _st_.goboom(_sage_const_107 )
try:
 _st_.current_tex_line = _sage_const_112 
 _st_.inline(_sage_const_127 , latex(new_basis_result[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_112 )
try:
 _st_.current_tex_line = _sage_const_114 
 _st_.inline(_sage_const_128 , latex(new_basis_result[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_114 )
try:
 _st_.current_tex_line = _sage_const_116 
 _st_.inline(_sage_const_129 , latex((new_basis.inverse() * v2.transpose()).transpose()))
except:
 _st_.goboom(_sage_const_116 )
try:
 _st_.current_tex_line = _sage_const_123 
 _st_.inline(_sage_const_130 , latex(S))
except:
 _st_.goboom(_sage_const_123 )
try:
 _st_.current_tex_line = _sage_const_133 
 _st_.inline(_sage_const_131 , latex(J))
except:
 _st_.goboom(_sage_const_133 )
try:
 _st_.current_tex_line = _sage_const_147 
 _st_.inline(_sage_const_132 , latex(M))
except:
 _st_.goboom(_sage_const_147 )
try:
 _st_.current_tex_line = _sage_const_159 
 _st_.inline(_sage_const_133 , latex(phi_A))
except:
 _st_.goboom(_sage_const_159 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_134 , latex(_sage_const_5 *A*A))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_135 , latex(_sage_const_7 *A))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_136 , latex(_sage_const_3 *identity_matrix(_sage_const_3 )))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_168 
 _st_.inline(_sage_const_137 , latex(_sage_const_5 *A*A - _sage_const_7 *A + _sage_const_3 *identity_matrix(_sage_const_3 )))
except:
 _st_.goboom(_sage_const_168 )
try:
 _st_.current_tex_line = _sage_const_183 
 _st_.inline(_sage_const_138 , latex(A*A))
except:
 _st_.goboom(_sage_const_183 )
try:
 _st_.current_tex_line = _sage_const_183 
 _st_.inline(_sage_const_139 , latex(_sage_const_5 *A))
except:
 _st_.goboom(_sage_const_183 )
try:
 _st_.current_tex_line = _sage_const_183 
 _st_.inline(_sage_const_140 , latex(_sage_const_7 *identity_matrix(_sage_const_3 )))
except:
 _st_.goboom(_sage_const_183 )
try:
 _st_.current_tex_line = _sage_const_186 
 _st_.inline(_sage_const_141 , latex((A*A - _sage_const_5 *A + _sage_const_7 *identity_matrix(_sage_const_3 )) / _sage_const_3 ))
except:
 _st_.goboom(_sage_const_186 )
_st_.endofdoc()

